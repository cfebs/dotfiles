#!/usr/bin/env bash

echoerr() {
	echo "$@" 1>&2
}

cmd_exists() {
	command -v "$1" >/dev/null 2>&1
	return $?
}

run_upgrade_pkgs() {
	(
		set -e
		# elevate with a noop
		sudo cat /dev/null
		if [[ $? != 0 ]]; then
			echoerr ">> No sudo. Exiting..."
			exit 1
		fi

		if grep -i -q "DISTRIB_ID=[\"']*Arch" /etc/lsb-release; then
			echoerr ">> Upgrading archlinux"
			if cmd_exists flatpak; then
				echoerr ">> Upgrading flatpack"
				sudo flatpak update
				sudo flatpak uninstall --unused
			fi

			if cmd_exists snap; then
				echoerr ">> Upgrading snaps"
				sudo snap refresh
			fi

			echoerr ">> Syncing archlinux-keyring"
			sudo pacman -Sy --noconfirm archlinux-keyring

			if cmd_exists paru; then
				echoerr ">> Upgrading paru"
				paru
			elif cmd_exists yay; then
				echoerr ">> Upgrading yay"
				yay
			else
				echoerr ">> Upgrading pacman"
				sudo pacman -Syu
			fi

			if cmd_exists paccache; then
				echoerr ">> Running paccache cleanup"
				sudo paccache -r -k 4
			fi


			if cmd_exists pacdiff; then
				echoerr ">> Running pacdiff"
				#if cmd_exists meld; then
				#    DIFFPROG=/usr/bin/meld sudo -E pacdiff
				#elif cmd_exists vimdiff; then
				#    DIFFPROG=/usr/bin/vimdiff sudo -E pacdiff
				if cmd_exists vimdiff; then
					DIFFPROG='/usr/bin/vimdiff --cmd "colorscheme evening"' sudo -E pacdiff
				else
					echoerr ">> ERROR: no good diff programs"
					return 1
				fi
			fi
		fi

		if cmd_exists apt; then
			echoerr ">> Upgrading apt"
			apt update && sudo apt upgrade -y
		fi
	)
	rc=$?
	echoerr ">> ${FUNCNAME[0]} function returned with code $?"
	return $rc
}

run_ansible() {
	(
		set -e
		if ! cmd_exists git; then
			echoerr ">> ERROR ansible: Git is not installed"
			return 1;
		fi

		if [[ ! -d "$HOME/src/ansibles" ]]; then
			echoerr ">> No ansible dir, skipping"
			return 0;
		fi

		echoerr ">> Checking for ansible run"
		pushd "$HOME/src/ansibles" 1>/dev/null
		if [[ ! -z "$(git status --untracked-files=no --porcelain)" ]]; then
			echoerr ">> WARNING: Ansible git not clean, not running"
			return 0
		fi

		echoerr ">> Running ansible"
		git pull
		sudo make this-no-become

		echoerr ">> Updating vim plugins"
		# Vim update plugins:
		# - Plug
		# - vim-go
		if cmd_exists nvim; then
			(
			nvim +PlugInstall +PlugUpdate +qall;
			nvim +GoInstallBinaries +qall;
			exit 0;
		)
		elif cmd_exists vim; then
			(
				vim +PlugInstall +PlugUpdate +qall;
				vim +GoInstallBinaries +qall;
				exit 0;
			)
		fi
			popd 1>/dev/null
	)
	rc=$?
	echoerr ">> ${FUNCNAME[0]} function returned with code $?"
	return $rc
}

main() {
	run_upgrade_pkgs || return $?
	run_ansible || return $?
}

main
rc=$?
echoerr ">> Finished with code $rc"
exit $?
