[alias]
	user-vimeo = !git config user.name 'Collin Lefeber' && git config user.email "collin@vimeo.com && git config commit.gpgsign true && git config user.signingkey 02A351A05D30AFB62127FF5E284D659F3B003823"
	user-default = !git config user.name 'Collin Lefeber' && git config user.email "hello@cfebs.com && git config commit.gpgsign true && git config user.signingkey EAAEC3829CF42B878877D14295352A65EB0C27A9"
	sendemail-cfebs = !git config sendemail.smtpserver '/usr/bin/msmtp' && git config sendemail.smtpserveroption '-a' && git config sendemail.smtpserveroption 'cfebs'
	f = fetch --all
	co = checkout
	st = status
	pull = pull --ff-only
	pase = pull --rebase
	lg = log
	l = log --pretty=format:'%C(yellow)%h %Cred%ad %Cblue%an%Cgreen%d %Creset%s' --date=short
	lgpr = "!f() { local this_branch=$(git symbolic-ref --short HEAD); git log \"$@\" --first-parent --no-merges --stat $(git merge-base origin/master $this_branch)..$this_branch; }; f"
	dc = diff --cached
	d = diff
	dpr = "!f() { local this_branch=$(git symbolic-ref --short HEAD); git diff \"$@\" $(git merge-base master $this_branch)...$this_branch; }; f"
	dfiles = diff --name-only --relative
	dprfiles = "!f() { local this_branch=$(git symbolic-ref --short HEAD); git diff --name-only --relative \"$@\" $(git merge-base master $this_branch)...$this_branch; }; f"
	sup = submodule update --init --recursive
	sub-reset = submodule foreach --recursive git reset --hard
	commitall = !git add . && git commit
	b = branch
	unstage = reset HEAD
	current-branch = symbolic-ref --short HEAD
	slist = stash list -15
	slistt = stash list -40
	slisttt = stash list -80
	sapply = "!f() { git stash apply stash@{$1}; }; f"
	sshow = "!f() { git show -p stash@{$1}; }; f"
	rlc = !git reflog | grep checkout | head -15
	rlcc = !git reflog | grep checkout | head -40
	rlccc = !git reflog | grep checkout | head -80
	ru = remote update
	tagdates = for-each-ref --sort=taggerdate --format '%(refname) %(taggerdate)' refs/tags
	set-upstream = !git branch --set-upstream-to=origin/`git symbolic-ref --short HEAD`
	forcepush = push --force-with-lease
	reblast = rebase -i HEAD^^
	fixhead = !git commit --fixup=HEAD && git rebase -i --autosquash HEAD^^
	pushoriginup = "!f() { this_branch=$(git symbolic-ref --short HEAD); [ \"${this_branch}\" = \"master\" ] && echo ERROR: This is master && exit 1; git push -u origin ${this_branch}; }; f"
	rebrase = "!f() { local this_branch=$(git symbolic-ref --short HEAD); git rebase -i $(git merge-base master $this_branch origin/master); }; f"
[color]
	ui = true
[push]
	default = simple
[credential]
	helper = cache --timeout=36000
[core]
	filemode = true
[rerere]
	enabled = true
[user]
	email = hello@cfebs.com
	name = Collin Lefeber
[hub]
	host = github.vimeows.com
	protocol = ssh
[url "git@github.vimeows.com:"]
	insteadOf = https://github.vimeows.com
[pull]
	ff = only
[merge]
	renameLimit = 999999
[init]
	defaultBranch = main
[includeIf "gitdir:~/src/vimeo/**"]
	path = .gitconfig-vimeo
